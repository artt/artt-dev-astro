---
// Custom element to render a link
// Could include target="_blank" rel="noopener noreferrer" for external links,
// or bilingual support for links

interface Props {
  href: string;
  class?: string;
}

let { href, class: className, ...rest } = Astro.props;
console.log(href, rest)
// if href includes trailing slash, remove it
href = href === "/" ? href : href.replace(/\/$/, '');

// determine if the link is active by URL

const pathname = Astro.url.pathname
const isActive = pathname.startsWith(href) || pathname.startsWith(`/en${href}`)

---
<a href={href} class:list={[className, {active: isActive}]} {...rest}>
  <slot />
</a>