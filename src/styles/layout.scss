@use "globalVariables" as *;

body {
  margin: 0 auto;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  width: 100%;
}

main {
  overflow-x: clip;

  display: grid;
  // https://css-tricks.com/preventing-a-grid-blowout/
  grid-template-columns: minmax(0, 1fr);
  gap: calc(1.5*var(--width-margin)) var(--width-margin);

  // margin width for the small screen is a bit too small
  margin-top: calc(2 * var(--width-margin));
  @media screen and (min-width: $screen-mid) {
    margin-top: var(--width-margin);
  }

  #content {
    position: relative;
    z-index: 10;
  }

  #content > :first-child {
    margin-top: 0;
  }

  @media screen and (min-width: $screen-large) {
    &.split {
      grid-template-columns: minmax($post-min-width, $post-max-width) $side-width;
      header {
        grid-column: 1 / 3;
      }
    }
    #content {
      background-color: var(--color-background);
    }
    .afterBody {
      grid-row: 3 / 4;
      grid-column: 1 / 2;
    }
    &:not(.split) > .sidebarContainer {
      display: none;
    }
    #component-after-body {
      grid-row: 3 / 4;
      grid-column: 1 / 2;
    }
    #component-sidebar > nav {
      display: block;
      position: sticky;
      top: 6rem;
    }
  }

}

@media screen and (min-width: $screen-xlarge) {
  #component-cover-image ~ main {
    margin-top: 0; // so that the side bar is flush with the top of the image
    header {
      background-color: var(--color-background);
      z-index: 11;
      grid-column: 1 / 2;
      border-radius: 1rem 1rem 0 0;
      margin: calc(-1 * var(--width-margin));
      margin-bottom: calc(-1.5 * var(--width-margin));
      margin-top: 0;
      padding: var(--width-margin);
      padding-bottom: calc(1.5 * var(--width-margin));
    }
    #content {
      grid-row: 2 / 3;
      background-color: var(--color-background);
    }
    #component-sidebar {
      grid-column: 2 / 3;
      grid-row: 2 / 3;
    }
  }
}

#component-cover-image {
  z-index: 1;
  box-shadow: 0 10px 30px 2px var(--color-cover-shadow-spread), 0 2px 5px 0 var(--color-cover-shadow-focus);
  background-size: 1px 1px;
  
  @media (min-width: $screen-xlarge) {
    margin-bottom: -$top-image-overlap;
  }
  
  #component-cover-image-container {
    width: 100%;
    max-width: max(80vw, 1600px);
    aspect-ratio: $cover-tall-ar;
    @media (min-width: $screen-mid) {
      aspect-ratio: $cover-wide-ar;
    }
  }
}

main:not(.split) #component-sidebar {
  display: none;
}

#component-sidebar {
  display: none;
  @media screen and (min-width: $screen-large) {
    display: block;
  }
}

section:nth-child(even) {
  --color-background-top: var(--color-background);
  --color-background-section: var(--color-background-alt);
  &:last-child {
    --background-color-section: var(--color-background);
  }
}

section:nth-child(odd) {
  --color-background-top: var(--color-background-alt);
  --color-background-section: var(--color-background);
}

// https://stackoverflow.com/a/39554003/3230090
$height-small: 40vh;
$height-large: 1000px;
$max-height-large: 50vh;

.heroSize {
  position: relative;
  height: $height-small;
  @media only screen and (min-width: $screen-mid) {
    height: $height-large;
    max-height: $max-height-large;
  }
}

// https://css-tricks.com/full-width-containers-limited-width-parents/#aa-no-calc-needed
.full-width {
  width: 100vw !important;
  left: 50% !important;
  margin-left: -50vw !important;
}