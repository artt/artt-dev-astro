@use "globalVariables" as *;

$block-padding: 0.75rem;
$code-font-size: 0.8rem;
$tab-width: 3px;
$padding: 4px;
$padding-left: 8px;
$block-line-height: 1.5;

// .shiki.shiki-light {
//   animation: fade_in calc(3*var(--time-long));
//   :root[data-theme="dark"] & {
//     display: none;
//     opacity: 0;
//   }
// }

// .shiki.shiki-dark {
//   animation: fade_in calc(3*var(--time-long));
//   :root[data-theme="light"] & {
//     display: none;
//     opacity: 0;
//   }
// }

// @keyframes fade_in {
//   0% { opacity: 0; }
//   100% { opacity: 1; }
// }

html[data-theme=dark] .astro-code,
html[data-theme=dark] .astro-code span:not(.line) {
  color: var(--shiki-dark) !important;
}

// regular code
code {
	font-family: var(--font-mono);
	font-size: $code-font-size;
	padding: calc($padding / 2) $padding;
  :not(.astro-code) > & {
    position: relative;
    display: inline-block;
    max-width: 100%;
    box-sizing: border-box;
    // z-index: 0;
    &::before {
      content: '';
      background-color: var(--color-code-background);
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      border-radius: $padding;
    }
  }
}

$annotation-colors: (
  "add": "--color-x-green",
  "remove": "--color-x-red",
  "highlighted": "--color-heading"
);

.astro-code {
  margin: 1rem 0;
  padding: $block-padding 0;
  border-radius: 0.5rem;
  box-sizing: border-box;
  background-color: var(--color-code-background) !important;
  font-size: $code-font-size;
  line-height: $block-line-height;
  overflow-x: auto;
  code {
    padding: 0;
    width: max-content;
    display: block;
    min-width: 100%;
  }
  .line {
    display: inline-block;
    width: 100%;
    min-height: calc($code-font-size * $block-line-height);
    // max-height: calc($code-font-size * $block-line-height);
    padding: 0 $block-padding;
    padding-left: calc($block-padding + $padding-left);
    box-sizing: border-box;
    &:last-child {
      display: none;
    }

    @each $type, $color in $annotation-colors {
      &.#{$type} {
        --color: var(#{$color});
      }
    }

    &.add,
    &.remove,
    &.highlighted {
      position: relative;
      color: var(--color);
      border-left: $tab-width solid var(--color);
      padding-left: calc($block-padding + $padding-left - $tab-width);
      &::before {
        content: '';
        position: absolute;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: var(--color);
        opacity: 0.12;
      }
    }

    &.add,
    &.remove {
      &::after {
        position: absolute;
        top: 0;
        left: $padding;
        height: 100%;
      }
    }

    &.add::after {
      content: '+';
    }
    &.remove::after {
      content: '-';
    }

    .shiki-line-empty {
      &::after {
        content: '\200b';
      }
    }

    .highlighted-word {
      background-color: var(--color);
      color: red !important;
    }

  }

  // tab sizes
  tab-size: 2;
  &.shiki-lang-python {
    tab-size: 4;
  }

  &::-webkit-scrollbar {
    background-color: var(--color-code-background);
  }

  &::-webkit-scrollbar-thumb {
    background-color: var(--color-neutral-20);
    border: 4px solid var(--color-code-background);
    border-radius: 100px;
    &:hover {
      background-color: var(--color-neutral-40);
    }
  }

}

.line.focused ~ .line:not(.focused),
.line:not(.focused):has(~ .line.focused) {
  filter: blur(1.5px);
  transition: filter var(--time-short);
}
/* reset blur on hover */
.astro-code:hover .line {
  filter: blur(0) !important;
}