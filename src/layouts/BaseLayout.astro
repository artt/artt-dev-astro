---
import { getAverageColor } from 'fast-average-color-node';

import Header from '@/components/Header/index.astro';
import Footer from '@/components/Footer/index.astro';
import TitleBlock from '@/components/TitleBlock.astro';
import { ViewTransitions } from 'astro:transitions';
import { getLocale } from "astro-i18n-aut";
import { Image } from 'astro:assets';

import coverImage from '@/images/abstract.png';

import '@/styles/tailwind.css';
import '@/styles/global.scss';
import '@/styles/layout.scss';

interface Props {
  title: string;
  subtitle?: string;
  date?: string;
  cover?: ImageMetadata & { fsPath: string }; // a bit hacky here
  noTitle?: boolean;
  noCap?: boolean;
  noSplit?: boolean;
  noCover?: boolean;
}

const { title, subtitle, date, cover, noTitle=false, noCap=false, noSplit=false, noCover=false } = Astro.props;

// TODO: fix this
let coverColor = "var(--color-background)"
if (cover) {
  coverColor = await getAverageColor(cover.fsPath, { algorithm: 'dominant' }).then(color => color.hex);
}
// const coverColor = await getAverageColor(cover?.fsPath || `${import.meta.dirname}/../images/abstract.png`, { algorithm: 'dominant' }).then(color => color.hex);

---

<html lang={getLocale(Astro.url)}>
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href={`https://js.api.artt.dev/random-shapes/blobs.svg?numBlobs=2&fill=%23077185,%23D76D07cc&stroke=none&v=${Date.now()}`} />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body>
    <script is:inline data-astro-rerun src="/loadTheme.js" />
    <script is:inline data-astro-rerun src="/loadLang.js" />
    <Header />
    {!noCover &&
      <div id="component-cover-image" class="max-width" style={{ backgroundColor: coverColor }} >
        <Image src={cover || coverImage} alt="" class="mx-auto" />
        {/* due to props thing */}
      </div>
    }
    <main class:list={[{"cap-width": !noCap}, {split: !noSplit}]}>
      {!noTitle &&
        <TitleBlock
          title={title}
          subtitle={subtitle}
          date={date}
        />
      }
      <div id="content">
        <slot />
      </div>
      <div id="component-after-body">
        <slot name="after-body" />
      </div>
      <div id="component-sidebar">sidebar</div>
    </main>
    <div id="component-spacer" class="spacer" />
    <Footer />
  </body>
</html>
<script src="../scripts/darkmode.js" />